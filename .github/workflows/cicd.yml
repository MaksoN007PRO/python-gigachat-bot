name: Deploy to Remote Server

on:
  workflow_dispatch:
    branches:
      - main  # Замените на вашу основную ветку

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up SSH
      uses: webfactory/ssh-agent@v0.5.4
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

    - name: Install Docker on remote server
      run: |
        ssh -o StrictHostKeyChecking=no -t ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
        # Update the apt package index and install packages to allow apt to use a repository over HTTPS
        sudo apt-get update
        sudo apt-get install -y apt-transport-https ca-certificates curl software-properties-common
    
        # Add Docker’s official GPG key
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
    
        # Set up the stable repository
        sudo add-apt-repository \
          "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
    
        # Install Docker
        sudo apt-get update
        sudo apt-get install -y docker-ce docker-ce-cli containerd.io
    
        # Add user to the docker group
        sudo usermod -aG docker $USER
        EOF

    - name: Clean repository directory
      run: |
        rm -rf /${{ secrets.SSH_USER }}/python-gigachat-bot/

    - name: Git clone repo
      run: |
        ssh -o StrictHostKeyChecking=no -t ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
        git clone https://github.com/MaksoN007PRO/python-gigachat-bot.git

    - name: Deploy the app with Docker
      run: |
        ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
          # Переходим в директорию с проектом
          cd /${{ secrets.SSH_USER }}/python-gigachat-bot/
    
          if [ $(docker ps -q -f name=python-gigachat-bot) ]; then
            echo "Container is running, stopping it..."
            docker stop python-gigachat-bot
            docker rm python-gigachat-bot
          elif [ $(docker ps -a -q -f name=python-gigachat-bot) ]; then
            echo "Container exists but not running, removing it..."
            docker rm python-gigachat-bot
          else
            echo "Container does not exist, proceeding..."
          fi
    
          docker build -t python-gigachat-bot .
          docker create --name python-gigachat-bot -p 8501:8501 python-gigachat-bot
          docker start python-gigachat-bot
        EOF

